<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gtercn.carhome.cms.dao.common.ReplyMapper">

	<sql id="Base_Column_List">
		id, user_id, to_user_id, type_id, reference_id, item_id, content,
		delete_flag, insert_time,
		update_time
  </sql>
  <!-- 查询所有信息 -->
	<select id="queryAllData" resultType="com.gtercn.carhome.cms.entity.Reply" parameterType="java.util.Map">
		select id, (select nickname from tc_user u where u.user_id=r.user_id) as user_id, 
			(select nickname from tc_user u where u.user_id=r.to_user_id) as to_user_id, 
			case type_id 
				when 0 then (select content from tb_question_and_article q where q.id=r.reference_id)
				when 2 then (select title from tb_self_driving_trowelling q where q.id=r.reference_id)
			end as reference_id, 
	 	item_id, content,delete_flag,insert_time,update_time
		from tb_reply r
		<where>
			delete_flag=0
		</where> 
		order by r.insert_time limit #{beginResult},#{pageSize}
	</select>
	
	<!-- 查询所有数据数 -->
	<select id="getTotalCount" resultType="java.lang.Integer" parameterType="java.util.Map">
		select count(1) from tb_reply
		<where>
			delete_flag=0
		</where> 
	</select>
	
	<select id="selectByPrimaryKey" resultType="com.gtercn.carhome.cms.entity.Reply" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from tb_reply
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<!-- 修改评论状态 -->
	<update id="updateByPrimaryKey" parameterType="java.util.Map">
		update tb_reply set delete_flag=#{deleteFlag,jdbcType=VARCHAR}
		where id = #{id,jdbcType=VARCHAR}
  	</update>
  
	<!-- 查询所有问题回复 -->
	<select id="selectByQuestionId" parameterType="java.util.Map" resultType="com.gtercn.carhome.cms.entity.Reply">
		select  id, (select nickname from tc_user u where u.user_id=r.user_id) as user_id, 
			(select nickname from tc_user u where u.user_id=r.to_user_id) as to_user_id, 
	 		 item_id, content,delete_flag,insert_time,update_time
		from tb_reply r
		<where>
			r.reference_id = #{questionId,jdbcType=VARCHAR}
			and r.type_id=#{typeId,jdbcType=VARCHAR}
		</where>
		order by r.insert_time 
	</select>
</mapper>